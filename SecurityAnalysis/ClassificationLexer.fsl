{
module ClassificationLexer
open FSharp.Text.Lexing
open System.Globalization
open System
open ClassificationParser
}

// Macros for regular expressions:
let digit       = ['0'-'9']
let var         = ['a'-'z''A'-'Z'](['a'-'z']|['A'-'Z']|digit|'_')*

let whitespace  = ['\u00A0' ' ' '\r' '\t']  

// Rules for each token in our language:
rule tokenize = parse

| whitespace        { tokenize lexbuf }
| ','               { SEP }
| '='               { ASSIGN }
| var               { VAR(LexBuffer<_>.LexemeString lexbuf)}
| eof               { EOF }