// Open the file that defines the type "expr" we shall use as AST
%{
open ClassificationAST
%}

// Declare the tokens (terminal symbols)
%token <string> VAR
%token SEP ASSIGN EOF

// We declare the initial non-terminal symbol
%start start

// We specify the return type of each of then non-terminal symbols
%type <ClassificationAssignment> start
%type <ClassificationAssignment> CAss
%type <ClassificationAssignment> CAssA

// Grammar productions
%%

start: CAss EOF                    { $1 }

CAss:
  | CAssA SEP CAss                 { ClassAss($1,$3) }               // C ; C
  | CAssA                          { $1 }                        // (Ca)

CAssA:
  | VAR ASSIGN VAR                     { Class($1,$3)}

%%
